MODULE main
VAR
	active  		: boolean;
	redMovable		: boolean;
	blackMovable	: boolean;
	redPos   		: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	blackPos 		: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	redPosOld		: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	blackPosOld		: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	routeAvailable  : array 0..14 of boolean;
	game			: {playing, finished};

ASSIGN
	init(active) := {TRUE, FALSE};
	init(redMovable) := TRUE;
	init(blackMovable) := TRUE;
	init(redPos)  := 5;
	init(blackPos) := 2;
	init(game) := playing;
	init(redPosOld) := 5;
	init(blackPosOld) := 2;

	init(routeAvailable[0]) := TRUE;
	init(routeAvailable[1]) := TRUE;
	init(routeAvailable[2]) := TRUE;
	init(routeAvailable[3]) := TRUE;
	init(routeAvailable[4]) := TRUE;
	init(routeAvailable[5]) := TRUE;
	init(routeAvailable[6]) := TRUE;
	init(routeAvailable[7]) := TRUE;
	init(routeAvailable[8]) := TRUE;
	init(routeAvailable[9]) := TRUE;
	init(routeAvailable[10]) := TRUE;
	init(routeAvailable[11]) := TRUE;
	init(routeAvailable[12]) := TRUE;
	init(routeAvailable[13]) := TRUE;
	init(routeAvailable[14]) := TRUE;

	next(redPosOld) := redPos;
	next(blackPosOld) := blackPos;

	next(redPos) := case
		redPos = 1  & redMovable & active 	: { 2, 5, 6};
		redPos = 2  & redMovable & active	: { 1, 3, 7};
		redPos = 3  & redMovable & active	: { 2, 4, 8};
		redPos = 4  & redMovable & active	: { 3, 5, 9};
		redPos = 5  & redMovable & active	: { 1, 4, 10};
		redPos = 6  & redMovable & active	: { 1, 8, 9};
		redPos = 7  & redMovable & active	: { 2, 9, 10};
		redPos = 8  & redMovable & active	: { 3, 6, 10};
		redPos = 9  & redMovable & active	: { 4, 6, 7};
		redPos = 10 & redMovable & active	: { 5, 7, 8};
		TRUE : redPos;
	esac;

	next(blackPos) := case
		blackPos = 1  & blackMovable & !active: { 2, 5, 6};
		blackPos = 2  & blackMovable & !active: { 1, 3, 7};
		blackPos = 3  & blackMovable & !active: { 2, 4, 8};
		blackPos = 4  & blackMovable & !active: { 3, 5, 9};
		blackPos = 5  & blackMovable & !active: { 1, 4, 10};
		blackPos = 6  & blackMovable & !active: { 1, 8, 9};
		blackPos = 7  & blackMovable & !active: { 2, 9, 10};
		blackPos = 8  & blackMovable & !active: { 3, 6, 10};
		blackPos = 9  & blackMovable & !active: { 4, 6, 7};
		blackPos = 10 & blackMovable & !active: { 5, 7, 8};
		TRUE : blackPos;
	esac;

	next(routeAvailable[0]) := case
		redPosOld = 5 & redPos = 1 : FALSE;
		redPosOld = 1 & redPos = 5 : FALSE;
		blackPosOld = 5 & blackPos = 1 : FALSE;
		blackPosOld = 1 & blackPos = 5 : FALSE;
		TRUE	:	routeAvailable[0];
	esac;
	next(routeAvailable[1]) := case
		redPosOld = 2 & redPos = 1 : FALSE;
		redPosOld = 1 & redPos = 2 : FALSE;
		blackPosOld = 2 & blackPos = 1 : FALSE;
		blackPosOld = 1 & blackPos = 2 : FALSE;
		TRUE	:	routeAvailable[1];
	esac;
	next(routeAvailable[2]) := case
		redPosOld = 2 & redPos = 3 : FALSE;
		redPosOld = 3 & redPos = 2 : FALSE;
		blackPosOld = 2 & blackPos = 3 : FALSE;
		blackPosOld = 3 & blackPos = 2 : FALSE;
		TRUE	:	routeAvailable[2];
	esac;
	next(routeAvailable[3]) := case
		redPosOld = 4 & redPos = 3 : FALSE;
		redPosOld = 3 & redPos = 4 : FALSE;
		blackPosOld = 4 & blackPos = 3 : FALSE;
		blackPosOld = 3 & blackPos = 4 : FALSE;
		TRUE	:	routeAvailable[3];
	esac;
	next(routeAvailable[4]) := case
		redPosOld = 4 & redPos = 5 : FALSE;
		redPosOld = 5 & redPos = 4 : FALSE;
		blackPosOld = 4 & blackPos = 5 : FALSE;
		blackPosOld = 5 & blackPos = 4 : FALSE;
		TRUE	:	routeAvailable[4];
	esac;
	next(routeAvailable[5]) := case
		redPosOld = 1 & redPos = 6 : FALSE;
		redPosOld = 6 & redPos = 1 : FALSE;
		blackPosOld = 1 & blackPos = 6 : FALSE;
		blackPosOld = 6 & blackPos = 1 : FALSE;
		TRUE	:	routeAvailable[5];
	esac;
	next(routeAvailable[6]) := case
		redPosOld = 2 & redPos = 7 : FALSE;
		redPosOld = 7 & redPos = 2 : FALSE;
		blackPosOld = 2 & blackPos = 7 : FALSE;
		blackPosOld = 7 & blackPos = 2 : FALSE;
		TRUE	:	routeAvailable[6];
	esac;
	next(routeAvailable[7]) := case
		redPosOld = 3 & redPos = 8 : FALSE;
		redPosOld = 8 & redPos = 3 : FALSE;
		blackPosOld = 3 & blackPos = 8 : FALSE;
		blackPosOld = 8 & blackPos = 3 : FALSE;
		TRUE	:	routeAvailable[7];
	esac;
	next(routeAvailable[8]) := case
		redPosOld = 4 & redPos = 9 : FALSE;
		redPosOld = 9 & redPos = 4 : FALSE;
		blackPosOld = 4 & blackPos = 9 : FALSE;
		blackPosOld = 9 & blackPos = 4 : FALSE;
		TRUE	:	routeAvailable[8];
	esac;
	next(routeAvailable[9]) := case
		redPosOld = 5 & redPos = 10 : FALSE;
		redPosOld = 10 & redPos = 5 : FALSE;
		blackPosOld = 5 & blackPos = 10 : FALSE;
		blackPosOld = 10 & blackPos = 5 : FALSE;
		TRUE	:	routeAvailable[9];
	esac;
	next(routeAvailable[10]) := case
		redPosOld = 7 & redPos = 10 : FALSE;
		redPosOld = 10 & redPos = 7 : FALSE;
		blackPosOld = 7 & blackPos = 10 : FALSE;
		blackPosOld = 10 & blackPos = 7 : FALSE;
		TRUE	:	routeAvailable[10];
	esac;
	next(routeAvailable[11]) := case
		redPosOld = 6 & redPos = 8 : FALSE;
		redPosOld = 8 & redPos = 6 : FALSE;
		blackPosOld = 6 & blackPos = 8 : FALSE;
		blackPosOld = 8 & blackPos = 6 : FALSE;
		TRUE	:	routeAvailable[11];
	esac;
	next(routeAvailable[12]) := case
		redPosOld = 7 & redPos = 9 : FALSE;
		redPosOld = 9 & redPos = 7 : FALSE;
		blackPosOld = 7 & blackPos = 9 : FALSE;
		blackPosOld = 9 & blackPos = 7 : FALSE;
		TRUE	:	routeAvailable[12];
	esac;
	next(routeAvailable[13]) := case
		redPosOld = 10 & redPos = 8 : FALSE;
		redPosOld = 8 & redPos = 10 : FALSE;
		blackPosOld = 10 & blackPos = 8 : FALSE;
		blackPosOld = 8 & blackPos = 10 : FALSE;
		TRUE	:	routeAvailable[13];
	esac;
	next(routeAvailable[14]) := case
		redPosOld = 9 & redPos = 6 : FALSE;
		redPosOld = 6 & redPos = 9 : FALSE;
		blackPosOld = 9 & blackPos = 6 : FALSE;
		blackPosOld = 6 & blackPos = 9 : FALSE;
		TRUE	:	routeAvailable[14];
	esac;


	next(game) := case 
		redMovable = FALSE | blackMovable = FALSE : finished;
		redMovable = TRUE & blackMovable = TRUE : playing;
		TRUE : game;
	esac;

TRANS
	next(active) = !active;

INVAR
	routeAvailable[redPos] = TRUE;
